SELECT COUNT(p.id)
FROM stackoverflow.posts p
JOIN stackoverflow.post_types pt ON p.post_type_id=pt.id
WHERE pt.type = 'Question' AND (p.score > 300 OR p.favorites_count >= 100);

--

WITH list AS (
    SELECT COUNT(p.id) AS question,
    creation_date::date
    FROM stackoverflow.posts p
    JOIN stackoverflow.post_types pt ON p.post_type_id=pt.id
    WHERE pt.type = 'Question'
    GROUP BY creation_date::date
)
SELECT ROUND(AVG(question))
FROM list
WHERE creation_date BETWEEN '2008-11-01' AND '2008-11-18';

--

SELECT COUNT(DISTINCT u.id) 
FROM stackoverflow.users u
JOIN stackoverflow.badges b ON u.id = b.user_id
WHERE u.creation_date::date = b.creation_date::date;

--

SELECT COUNT(DISTINCT p.id)
FROM stackoverflow.posts p
JOIN stackoverflow.users u ON p.user_id=u.id
JOIN stackoverflow.votes v ON p.id=v.post_id
WHERE u.display_name = 'Joel Coehoorn';

--

SELECT *,
RANK ( ) OVER (ORDER BY id DESC) AS RANK
FROM stackoverflow.vote_types
ORDER BY id; 

--

SELECT u.id,
COUNT(v.vote_type_id) AS quantity
FROM stackoverflow.users u
JOIN stackoverflow.votes v ON u.id = v.user_id
JOIN stackoverflow.vote_types vt ON v.vote_type_id = vt.id
WHERE vt.name = 'Close'
GROUP BY u.id
ORDER BY quantity DESC, u.id DESC
LIMIT 10;

--

SELECT u.id,
COUNT(b.id) AS sign,
DENSE_RANK() OVER (ORDER BY COUNT(b.id) DESC) AS rating
FROM stackoverflow.users u
JOIN stackoverflow.badges b ON u.id = b.user_id
WHERE b.creation_date::date BETWEEN '2008-11-15' AND '2008-12-15'
GROUP BY u.id
LIMIT 10;

--

SELECT title,
       user_id,
       score,
       ROUND(AVG(score) OVER (PARTITION BY user_id)) AS avg_score
FROM stackoverflow.posts
WHERE title IS NOT NULL AND score != 0;

--

SELECT title
FROM stackoverflow.posts 
WHERE user_id IN (
    SELECT user_id
    FROM stackoverflow.badges
    GROUP BY user_id
    HAVING COUNT(id) > 1000
    )
    AND title IS NOT NULL;

--

SELECT id,
       views,
       CASE
       WHEN views >= 350 THEN 1
       WHEN views < 100 THEN 3
       ELSE 2
       END AS group
FROM stackoverflow.users
WHERE location LIKE '%United States%' 
AND views > 0;

--

WITH list AS
    (SELECT id ,
            views,
            CASE
                 WHEN views < 100 THEN 3
                 WHEN views >= 100 AND views < 350 THEN 2
                 WHEN views >= 350 THEN 1
             END AS group_case
     FROM stackoverflow.users
     WHERE views > 0 AND LOCATION LIKE('%United States%')
    ),
    max_views AS
    (SELECT  *,         
         MAX(views) OVER (PARTITION BY group_case)
     FROM list
    )
SELECT 
        id,
        group_case,
        views
FROM max_views 
WHERE views = max
ORDER BY views DESC, id;

--

WITH list AS (
SELECT EXTRACT(DAY FROM creation_date::date) AS day,
COUNT(id) AS users
FROM stackoverflow.users
WHERE creation_date::date BETWEEN '2008-11-01' AND '2008-11-30'
GROUP BY EXTRACT(DAY FROM creation_date::date)
    )
SELECT *,
SUM(users) OVER (ORDER BY day)
FROM list;

--

WITH list AS(
    SELECT DISTINCT user_id,
    MIN(creation_date) OVER (PARTITION BY user_id) AS min
    FROM stackoverflow.posts 
    )
SELECT user_id,
min - creation_date
FROM list l
JOIN stackoverflow.users u ON l.user_id=u.id;

--

SELECT SUM(views_count),
DATE_TRUNC('month', creation_date)::date
FROM stackoverflow.posts
GROUP BY DATE_TRUNC('month', creation_date)::date
ORDER BY SUM(views_count) DESC;

--

WITH list AS (
    SELECT u.display_name,
COUNT(DISTINCT u.id) AS user_id,
COUNT(p.id) AS answer
FROM stackoverflow.users u
JOIN stackoverflow.posts p ON u.id = p.user_id
JOIN stackoverflow.post_types pt ON p.post_type_id = pt.id
WHERE p.creation_date::date BETWEEN u.creation_date::date AND (u.creation_date::date + INTERVAL '1 months')
AND pt.type LIKE 'Answer'  
GROUP BY u.display_name
)
SELECT display_name,
user_id
FROM list
WHERE answer > 100
ORDER BY display_name;

--

SELECT COUNT(id),
DATE_TRUNC('month', creation_date)::date AS month
FROM stackoverflow.posts
WHERE EXTRACT(YEAR FROM CAST(creation_date AS timestamp)) = 2008
AND user_id IN (
    SELECT user_id
    FROM stackoverflow.posts p
    JOIN stackoverflow.users u ON p.user_id = u.id
    WHERE p.creation_date::date BETWEEN '2008-12-01' AND '2008-12-31'
    AND u.creation_date::date BETWEEN '2008-09-01' AND '2008-09-30') 
GROUP BY month
ORDER BY month DESC;

--

SELECT user_id,
creation_date,
views_count,
SUM(views_count) OVER (PARTITION BY user_id ORDER BY creation_date)
FROM stackoverflow.posts;

--

WITH list AS (
    SELECT COUNT(DISTINCT creation_date::date) AS posts,
user_id
FROM stackoverflow.posts
WHERE creation_date::date BETWEEN '2008-12-01' AND '2008-12-07'
GROUP BY user_id
    )
SELECT ROUND(AVG(posts))
FROM list;

--

WITH list AS (
    SELECT COUNT(DISTINCT id) AS posts,
EXTRACT(MONTH FROM creation_date::date) AS month
FROM stackoverflow.posts
WHERE creation_date::date BETWEEN '01-09-2008' AND '31-12-2008'
GROUP BY month
    )
SELECT month,
posts,
ROUND(((posts::numeric / LAG(posts) OVER (ORDER BY month)) - 1) * 100, 2) AS diff
FROM list;

--

WITH list AS (
    SELECT user_id,
    COUNT(DISTINCT id) AS posts
    FROM stackoverflow.posts
    GROUP BY user_id
    ORDER BY posts DESC
    LIMIT 1
    ),
list_two AS (
    SELECT p.creation_date,
    p.user_id,
    EXTRACT(WEEK FROM p.creation_date) AS week
    FROM stackoverflow.posts p
    JOIN list ON p.user_id = list.user_id
    WHERE p.creation_date::date BETWEEN '2008-10-01' AND '2008-10-31'
)
SELECT DISTINCT week,
MAX(creation_date) OVER (PARTITION BY week)
FROM list_two
ORDER BY week;